# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
stages:
  - stage: DiagnoseProject
    jobs:
      - job: InspectFiles
        pool:
          name: Default
        steps:
          - script: |
              echo "Current working directory:"
              cd
              echo "Listing root directory contents:"
              dir
              echo "Searching for gradlew files:"
              dir /s /b gradlew
              echo "Searching for android directory:"
              dir /s /b | findstr /i "\\android$"
            displayName: 'Inspect project structure'
          - script: |
              echo "Checking React Native project structure:"
              if exist package.json (
                echo "This appears to be a React Native project root"
                type package.json | findstr "react-native"
              )
            displayName: 'Verify React Native project'
  - stage: SetupAndroid
    dependsOn: DiagnoseProject
    jobs:
      - job: PrepareAndroid
        pool:
          name: Default
        steps:
          - script: |
              echo "Creating Android directory if it doesn't exist:"
              if not exist android (
                echo "Android directory not found, creating it..."
                mkdir android
              )
              
              echo "Checking if this is a React Native project:"
              if exist package.json (
                echo "Attempting to create/regenerate Android project:"
                npx react-native init temp_project --template react-native@latest
                echo "Copying gradlew files from template:"
                xcopy /E /I /Y temp_project\android\gradlew android\
                xcopy /E /I /Y temp_project\android\gradle android\gradle\
                xcopy /E /I /Y temp_project\android\gradlew.bat android\
                rd /s /q temp_project
              )
              
              echo "Checking Android directory after setup:"
              if exist android (
                cd android
                dir
              )
            displayName: 'Setup Android build environment'
            continueOnError: true
          - script: |
              echo "Attempting to generate Gradle wrapper directly:"
              cd android
              gradle wrapper
            displayName: 'Generate Gradle wrapper'
            continueOnError: true
          - script: |
              echo "Final check for gradlew:"
              dir /s /b gradlew
              if exist android\gradlew (
                echo "gradlew found in android directory"
              ) else (
                echo "gradlew still not found!"
              )
            displayName: 'Verify gradlew existence'

  # - stage: BuildiOS
  #   displayName: "Build iOS App"
  #   dependsOn: InstallDependencies
  #   jobs:
  #     - job: iOSBuild
  #       pool:
  #         name: 'YourMacAgentPool'  # Replace with your self-hosted macOS agent pool
  #       steps:
  #         - script: |
  #             cd ios
  #             pod install
  #           displayName: 'Install CocoaPods'

  #         - task: Xcode@5
  #           inputs:
  #             actions: 'build'
  #             scheme: 'YourAppScheme'  # Replace with your Xcode scheme
  #             sdk: 'iphoneos'
  #             configuration: 'Release'
  #             xcWorkspacePath: 'ios/YourApp.xcworkspace'
  #             signingOption: 'manual'
  #             signingIdentity: '$(SIGNING_IDENTITY)'
  #             provisioningProfileUuid: '$(PROVISIONING_PROFILE_UUID)'
  #           displayName: 'Build iOS App'

  #         - task: PublishBuildArtifacts@1
  #           inputs:
  #             pathToPublish: 'ios/build'
  #             artifactName: 'iOS_App'
  #           displayName: 'Publish iOS artifact'
